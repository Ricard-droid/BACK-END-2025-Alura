const estudantesListaA = ['M√°rcia','Ricardo', 'Marilia', 'Jonas', 'Miguel', 'Ana', 'Lorena', 'Sofia', 'Carlos', 'M√°rio'];
const salaB= estudantesListaA.slice(estudantesListaA.length / 2);// lista completa dividida ao meio(fim/metade)
const salaA= estudantesListaA.slice(0,estudantesListaA.length / 2);//lista iniciada do 0 at√© a metade.
const salaC= estudantesListaA.slice(2,estudantesListaA.length / 2);//lista iniciada do 2 at√© a metade.
const salaD= estudantesListaA.slice(estudantesListaA.length);//lista vazia
const salaF= estudantesListaA.slice();//lista completa

console.log(salaB);
console.log(salaA);
console.log(salaC);
console.log(salaD);
console.log(salaF);

const salaE = estudantesListaA.slice(); // lista completa
salaE.forEach(nome => console.log(nome));

// O m√©todo forEach() executa uma dada fun√ß√£o em cada elemento de um array.
// O m√©todo forEach() n√£o retorna nada (undefined).
// O m√©todo forEach() n√£o altera o array original.
// O m√©todo slice() retorna uma c√≥pia de parte de um array a partir de um subarray criado entre as posi√ß√µes inicial e final (fim n√£o incluso).
//mdn web docs ( consultas documentos )
//https://developer.mozilla.org/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Array/slice
//https://developer.mozilla.org/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Array
//https://developer.mozilla.org/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Array/length
//https://developer.mozilla.org/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Array/push
//https://developer.mozilla.org/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Array/pop

// A salaD
/*
Boa tarde, meu amigo! O problema est√° na forma como voc√™ est√° usando o m√©todo `.slice()` na cria√ß√£o da `salaD`. Vou explicar o que acontece.

### Entendendo o `.slice()`
O m√©todo `.slice(in√≠cio, fim)` retorna uma c√≥pia de parte do array original, come√ßando no √≠ndice `in√≠cio` e terminando **antes** do √≠ndice `fim`. Se `in√≠cio` for maior ou igual ao comprimento do array, o retorno ser√° um array vazio (`[]`), pois n√£o h√° elementos para extrair.

### O Problema com `salaD`
```js
const salaD = estudantesListaA.slice(estudantesListaA.length);
```
Aqui, `estudantesListaA.length` √© **o tamanho do array**, ou seja, 10. O m√©todo `.slice(10)` come√ßa a fatiar a partir do √≠ndice 10, mas como o array tem no m√°ximo 10 elementos (com √≠ndice de 0 a 9), n√£o h√° nada para extrair. O resultado, portanto, √© um array vazio `[]`.

### Como Resolver?
Se a inten√ß√£o era copiar todo o array, basta fazer:
```js
const salaD = estudantesListaA.slice(); // Clona o array inteiro
```
Ou, se queria extrair a √∫ltima parte do array (por exemplo, a segunda metade):
```js
const salaD = estudantesListaA.slice(estudantesListaA.length / 2);
```

Me avise se precisar de mais explica√ß√µes! üöÄ
*/